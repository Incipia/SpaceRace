// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;

namespace AssemblyCSharp
{

	/*				*
	-1 				+1
	 * 				*
	 *	1  2  3	 4  */

	public class PlayerStartPositionProvider
	{
		public static List<Vector3> startPositionsForRoomSize(int roomSize)
		{
			List<Vector3> positions = new List<Vector3>();

			float levelWidth = 4;
			float spacing = levelWidth / (roomSize + 1);
			int leftXEdge = -2;

			for (int i = 1; i <= roomSize; ++i)
			{
				float xPostiion = leftXEdge + spacing * i;
				Vector3 position = new Vector3(xPostiion, 0.13f);
				positions.Add(position);
			}

			return positions;
		}

		public static Vector3 startPositionForPlayer(PhotonPlayer player)
		{
			List<Vector3> startPositions = PlayerStartPositionProvider.startPositionsForRoomSize(PhotonNetwork.room.maxPlayers);
			int positionIndex = player.playerNumber() - 1;

			Vector3 startPosition = startPositions[0];
			if (startPositions.Count > positionIndex)
			{
				startPosition = startPositions[positionIndex];
			}
			return startPosition;
		}
	}
}

